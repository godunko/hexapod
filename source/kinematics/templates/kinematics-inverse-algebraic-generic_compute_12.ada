--
--  Copyright (C) 2023, Vadim Godunko
--
--  SPDX-License-Identifier: Apache-2.0
--

procedure Kinematics.Inverse.Algebraic.Generic_Compute_12
  (E_X         : Reals.Real;
   E_Y         : Reals.Real;
   E_Z         : Reals.Real;
   Cos_Theta_3 : Reals.Real;
   Sin_Theta_3 : Reals.Real;
   Theta_1     : out Reals.Real;
   Theta_2     : out Reals.Real)
is

   use type Reals.Real;

   Cos_Theta_1 : constant Reals.Real :=
((sin(%alpha_1)*sin(%gamma_0)*e_y+sin(%alpha_1)*cos(%gamma_0)*e_x-b_y*sin(%alpha_1)*sin(%gamma_0)-b_x*sin(%alpha_1)*cos(%gamma_0))*e_z^2+(((-2*d_1*sin(%alpha_1)-2*b_z*sin(%alpha_1))*sin(%gamma_0)+2*r_1*cos(%alpha_1)*cos(%gamma_0))*e_y+
((-2*d_1*sin(%alpha_1)-2*b_z*sin(%alpha_1))*cos(%gamma_0)-2*r_1*cos(%alpha_1)*sin(%gamma_0))*e_x+(2*b_y*d_1*sin(%alpha_1)+2*b_y*b_z*sin(%alpha_1)+2*b_x*r_1*cos(%alpha_1))*sin(%gamma_0)+(2*b_x*d_1*sin(%alpha_1)+2*b_x*b_z*sin(%alpha_1)-2*b_y*r_1*cos(%alpha_1))*cos(%gamma_0))*e_z+sin(%alpha_1)*sin(%gamma_0)*e_y^3+(sin(%alpha_1)*cos(%gamma_0)*e_x-3*b_y*sin(%alpha_1)*sin(%gamma_0)-b_x*sin(%alpha_1)*cos(%gamma_0))*e_y^2+(sin(%alpha_1)*sin(%gamma_0)*e_x^2+(-2*b_x*sin(%alpha_1)*sin(%gamma_0)-2*b_y*sin(%alpha_1)*cos(%gamma_0))*e_x+
(-2*d_2*r_3*sin(%alpha_1)*sin(%alpha_2)*sin(%gamma_0)-2*r_1*r_3*sin(%alpha_2)*cos(%gamma_0))*sin(%theta_3)-2*r_2*r_3*sin(%alpha_1)*sin(%gamma_0)*cos(%theta_3)+
(-2*d_2*d_3*sin(%alpha_1)*cos(%alpha_2)-r_3^2*sin(%alpha_1)-r_2^2*sin(%alpha_1)+r_1^2*sin(%alpha_1)-d_3^2*sin(%alpha_1)-d_2^2*sin(%alpha_1)+d_1^2*sin(%alpha_1)+2*b_z*d_1*sin(%alpha_1)+b_z^2*sin(%alpha_1)+3*b_y^2*sin(%alpha_1)+b_x^2*sin(%alpha_1))*sin(%gamma_0)+
(-2*d_3*r_1*cos(%alpha_2)+2*b_x*b_y*sin(%alpha_1)+r_1*(-2*d_1*cos(%alpha_1)-2*b_z*cos(%alpha_1)-2*d_2))*cos(%gamma_0))*e_y+sin(%alpha_1)*cos(%gamma_0)*e_x^3+(-b_y*sin(%alpha_1)*sin(%gamma_0)-3*b_x*sin(%alpha_1)*cos(%gamma_0))*e_x^2+((2*r_1*r_3*sin(%alpha_2)*sin(%gamma_0)-2*d_2*r_3*sin(%alpha_1)*sin(%alpha_2)*cos(%gamma_0))*sin(%theta_3)-2*r_2*r_3*sin(%alpha_1)*cos(%gamma_0)*cos(%theta_3)+(2*d_3*r_1*cos(%alpha_2)+2*b_x*b_y*sin(%alpha_1)+r_1*(2*d_1*cos(%alpha_1)+2*b_z*cos(%alpha_1)+2*d_2))*sin(%gamma_0)+
(-2*d_2*d_3*sin(%alpha_1)*cos(%alpha_2)-r_3^2*sin(%alpha_1)-r_2^2*sin(%alpha_1)+r_1^2*sin(%alpha_1)-d_3^2*sin(%alpha_1)-d_2^2*sin(%alpha_1)+d_1^2*sin(%alpha_1)+2*b_z*d_1*sin(%alpha_1)+b_z^2*sin(%alpha_1)+b_y^2*sin(%alpha_1)+3*b_x^2*sin(%alpha_1))*cos(%gamma_0))*e_x+
(r_3*(2*b_y*d_2*sin(%alpha_1)-2*b_x*r_1)*sin(%alpha_2)*sin(%gamma_0)+r_3*(2*b_x*d_2*sin(%alpha_1)+2*b_y*r_1)*sin(%alpha_2)*cos(%gamma_0))*sin(%theta_3)+(2*b_y*r_2*r_3*sin(%alpha_1)*sin(%gamma_0)+2*b_x*r_2*r_3*sin(%alpha_1)*cos(%gamma_0))*cos(%theta_3)+((2*b_y*d_2*d_3*sin(%alpha_1)-2*b_x*d_3*r_1)*cos(%alpha_2)+b_y*r_3^2*sin(%alpha_1)+b_y*r_2^2*sin(%alpha_1)-b_y*r_1^2*sin(%alpha_1)+b_y*d_3^2*sin(%alpha_1)+b_y*d_2^2*sin(%alpha_1)-b_y*d_1^2*sin(%alpha_1)-2*b_y*b_z*d_1*sin(%alpha_1)-b_y*b_z^2*sin(%alpha_1)-b_y^3*sin(%alpha_1)-b_x^2*
b_y*sin(%alpha_1)+r_1*(-2*b_x*d_1*cos(%alpha_1)-2*b_x*b_z*cos(%alpha_1)-2*b_x*d_2))*sin(%gamma_0)+((2*b_x*d_2*d_3*sin(%alpha_1)+2*b_y*d_3*r_1)*cos(%alpha_2)+b_x*r_3^2*sin(%alpha_1)+b_x*r_2^2*sin(%alpha_1)-b_x*r_1^2*sin(%alpha_1)+b_x*d_3^2*sin(%alpha_1)+b_x*d_2^2*
sin(%alpha_1)-b_x*d_1^2*sin(%alpha_1)-2*b_x*b_z*d_1*sin(%alpha_1)-b_x*b_z^2*sin(%alpha_1)-b_x*b_y^2*sin(%alpha_1)-b_x^3*sin(%alpha_1)+r_1*(2*b_y*d_1*cos(%alpha_1)+2*b_y*b_z*cos(%alpha_1)+2*b_y*d_2))*cos(%gamma_0))/((2*r_1*sin(%alpha_1)*sin(%gamma_0)^2+2*r_1*sin(%alpha_1)*cos(%gamma_0)^2)*e_y^2+(-4*b_y*r_1*sin(%alpha_1)*sin(%gamma_0)^2-4*b_y*r_1*sin(%alpha_1)*cos(%gamma_0)^2)*e_y+(2*r_1*sin(%alpha_1)*sin(%gamma_0)^2+2*r_1*sin(%alpha_1)*cos(%gamma_0)^2)*e_x^2+
(-4*b_x*r_1*sin(%alpha_1)*sin(%gamma_0)^2-4*b_x*r_1*sin(%alpha_1)*cos(%gamma_0)^2)*e_x+r_1*(2*b_y^2*sin(%alpha_1)+2*b_x^2*sin(%alpha_1))*sin(%gamma_0)^2+r_1*(2*b_y^2*sin(%alpha_1)+2*b_x^2*sin(%alpha_1))*cos(%gamma_0)^2);

   Sin_Theta_1 : constant Reals.Real :=
((sin(%alpha_1)*cos(%gamma_0)*e_y-sin(%alpha_1)*sin(%gamma_0)*e_x+b_x*sin(%alpha_1)*sin(%gamma_0)-b_y*sin(%alpha_1)*cos(%gamma_0))*e_z^2+(((-2*d_1*sin(%alpha_1)-2*b_z*sin(%alpha_1))*cos(%gamma_0)-2*r_1*cos(%alpha_1)*sin(%gamma_0))*e_y+((2*d_1*sin(%alpha_1)+2*b_z*sin(%alpha_1))*sin(%gamma_0)-2*r_1*cos(%alpha_1)*cos(%gamma_0))*e_x+(-2*b_x*d_1*sin(%alpha_1)-2*b_x*b_z*sin(%alpha_1)+2*b_y*r_1*cos(%alpha_1))*sin(%gamma_0)+(2*b_y*d_1*sin(%alpha_1)+2*b_y*b_z*sin(%alpha_1)+2*b_x*r_1*cos(%alpha_1))*cos(%gamma_0))*e_z+sin(%alpha_1)*cos(%gamma_0)*e_y^3+(-sin(%alpha_1)*sin(%gamma_0)*e_x+b_x*sin(%alpha_1)*sin(%gamma_0)-3*b_y*sin(%alpha_1)*cos(%gamma_0))*e_y^2+(sin(%alpha_1)*cos(%gamma_0)*e_x^2+(2*b_y*sin(%alpha_1)*sin(%gamma_0)-2*b_x*sin(%alpha_1)*cos(%gamma_0))*e_x+(2*r_1*r_3*sin(%alpha_2)*sin(%gamma_0)-2*d_2*r_3*sin(%alpha_1)*sin(%alpha_2)*cos(%gamma_0))*sin(%theta_3)-2*r_2*r_3*sin(%alpha_1)*cos(%gamma_0)*cos(%theta_3)+(2*d_3*r_1*cos(%alpha_2)-2*b_x*b_y*sin(%alpha_1)+r_1*(2*d_1*cos(%alpha_1)+2*b_z*cos(%alpha_1)+2*d_2))*sin(%gamma_0)+(-2*d_2*d_3*sin(%alpha_1)*cos(%alpha_2)-r_3^2*sin(%alpha_1)-r_2^2*sin(%alpha_1)+r_1^2*sin(%alpha_1)-d_3^2*sin(%alpha_1)-d_2^2*sin(%alpha_1)+d_1^2*sin(%alpha_1)+2*b_z*d_1*sin(%alpha_1)+b_z^2*sin(%alpha_1)+3*b_y^2*sin(%alpha_1)+b_x^2*sin(%alpha_1))*cos(%gamma_0))*e_y-sin(%alpha_1)*sin(%gamma_0)*e_x^3+(3*b_x*sin(%alpha_1)*sin(%gamma_0)-b_y*sin(%alpha_1)*cos(%gamma_0))*e_x^2+((2*d_2*r_3*sin(%alpha_1)*sin(%alpha_2)*sin(%gamma_0)+2*r_1*r_3*sin(%alpha_2)*cos(%gamma_0))*sin(%theta_3)+2*r_2*r_3*sin(%alpha_1)*sin(%gamma_0)*cos(%theta_3)+(2*d_2*d_3*sin(%alpha_1)*cos(%alpha_2)+r_3^2*sin(%alpha_1)+r_2^2*sin(%alpha_1)-r_1^2*sin(%alpha_1)+d_3^2*sin(%alpha_1)+d_2^2*sin(%alpha_1)-d_1^2*sin(%alpha_1)-2*b_z*d_1*sin(%alpha_1)-b_z^2*sin(%alpha_1)-b_y^2*sin(%alpha_1)-3*b_x^2*sin(%alpha_1))*sin(%gamma_0)+(2*d_3*r_1*cos(%alpha_2)+2*b_x*b_y*sin(%alpha_1)+r_1*(2*d_1*cos(%alpha_1)+2*b_z*cos(%alpha_1)+2*d_2))*cos(%gamma_0))*e_x+(r_3*(-2*b_x*d_2*sin(%alpha_1)-2*b_y*r_1)*sin(%alpha_2)*sin(%gamma_0)+r_3*(2*b_y*d_2*sin(%alpha_1)-2*b_x*r_1)*sin(%alpha_2)*cos(%gamma_0))*sin(%theta_3)+(2*b_y*r_2*r_3*sin(%alpha_1)*cos(%gamma_0)-2*b_x*r_2*r_3*sin(%alpha_1)*sin(%gamma_0))*cos(%theta_3)+((-2*b_x*d_2*d_3*sin(%alpha_1)-2*b_y*d_3*r_1)*cos(%alpha_2)-b_x*r_3^2*sin(%alpha_1)-b_x*r_2^2*sin(%alpha_1)+b_x*r_1^2*sin(%alpha_1)-b_x*d_3^2*sin(%alpha_1)-b_x*d_2^2*sin(%alpha_1)+b_x*d_1^2*sin(%alpha_1)+2*b_x*b_z*d_1*sin(%alpha_1)+b_x*b_z^2*sin(%alpha_1)+b_x*b_y^2*sin(%alpha_1)+b_x^3*sin(%alpha_1)+r_1*(-2*b_y*d_1*cos(%alpha_1)-2*b_y*b_z*cos(%alpha_1)-2*b_y*d_2))*sin(%gamma_0)+((2*b_y*d_2*d_3*sin(%alpha_1)-2*b_x*d_3*r_1)*cos(%alpha_2)+b_y*r_3^2*sin(%alpha_1)+b_y*r_2^2*sin(%alpha_1)-b_y*r_1^2*sin(%alpha_1)+b_y*d_3^2*sin(%alpha_1)+b_y*d_2^2*sin(%alpha_1)-b_y*d_1^2*sin(%alpha_1)-2*b_y*b_z*d_1*sin(%alpha_1)-b_y*b_z^2*sin(%alpha_1)-b_y^3*sin(%alpha_1)-b_x^2*b_y*sin(%alpha_1)+r_1*(-2*b_x*d_1*cos(%alpha_1)-2*b_x*b_z*cos(%alpha_1)-2*b_x*d_2))*cos(%gamma_0))/((2*r_1*sin(%alpha_1)*sin(%gamma_0)^2+2*r_1*sin(%alpha_1)*cos(%gamma_0)^2)*e_y^2+(-4*b_y*r_1*sin(%alpha_1)*sin(%gamma_0)^2-4*b_y*r_1*sin(%alpha_1)*cos(%gamma_0)^2)*e_y+(2*r_1*sin(%alpha_1)*sin(%gamma_0)^2+2*r_1*sin(%alpha_1)*cos(%gamma_0)^2)*e_x^2+(-4*b_x*r_1*sin(%alpha_1)*sin(%gamma_0)^2-4*b_x*r_1*sin(%alpha_1)*cos(%gamma_0)^2)*e_x+r_1*(2*b_y^2*sin(%alpha_1)+2*b_x^2*sin(%alpha_1))*sin(%gamma_0)^2+r_1*(2*b_y^2*sin(%alpha_1)+2*b_x^2*sin(%alpha_1))*cos(%gamma_0)^2);

   Cos_Theta_2 : constant Reals.Real :=
((r_3*sin(%alpha_1)*cos(%alpha_2)*sin(%theta_3)-d_3*sin(%alpha_1)*sin(%alpha_2))*e_z+((r_3*cos(%alpha_1)*cos(%alpha_2)*cos(%gamma_0)*cos(%theta_1)-r_3*cos(%alpha_1)*cos(%alpha_2)*sin(%gamma_0)*sin(%theta_1))*sin(%theta_3)+
(r_3*cos(%gamma_0)*sin(%theta_1)+r_3*sin(%gamma_0)*cos(%theta_1))*cos(%theta_3)+(d_3*cos(%alpha_1)*sin(%alpha_2)*sin(%gamma_0)+r_2*cos(%gamma_0))*sin(%theta_1)+(r_2*sin(%gamma_0)-d_3*cos(%alpha_1)*sin(%alpha_2)*cos(%gamma_0))*cos(%theta_1))*e_y+((-r_3*cos(%alpha_1)*cos(%alpha_2)*cos(%gamma_0)*sin(%theta_1)-r_3*cos(%alpha_1)*cos(%alpha_2)*sin(%gamma_0)*cos(%theta_1))*sin(%theta_3)+(r_3*cos(%gamma_0)*cos(%theta_1)-r_3*sin(%gamma_0)*sin(%theta_1))*cos(%theta_3)+(d_3*cos(%alpha_1)*sin(%alpha_2)*cos(%gamma_0)-r_2*sin(%gamma_0))*
sin(%theta_1)+(d_3*cos(%alpha_1)*sin(%alpha_2)*sin(%gamma_0)+r_2*cos(%gamma_0))*cos(%theta_1))*e_x+
((b_y*r_3*cos(%alpha_1)*cos(%alpha_2)*sin(%gamma_0)+b_x*r_3*cos(%alpha_1)*cos(%alpha_2)*cos(%gamma_0))*sin(%theta_1)+(b_x*r_3*cos(%alpha_1)*cos(%alpha_2)*sin(%gamma_0)-b_y*r_3*cos(%alpha_1)*cos(%alpha_2)*cos(%gamma_0))*cos(%theta_1)+(-d_1-b_z)*r_3*sin(%alpha_1)*cos(%alpha_2))*
sin(%theta_3)+((b_x*r_3*sin(%gamma_0)-b_y*r_3*cos(%gamma_0))*sin(%theta_1)+(-b_y*r_3*sin(%gamma_0)-b_x*r_3*cos(%gamma_0))*cos(%theta_1)-r_1*r_3)*cos(%theta_3)+
((b_x*r_2-b_y*d_3*cos(%alpha_1)*sin(%alpha_2))*sin(%gamma_0)+(-b_x*d_3*cos(%alpha_1)*sin(%alpha_2)-b_y*r_2)*cos(%gamma_0))*sin(%theta_1)+((-b_x*d_3*cos(%alpha_1)*sin(%alpha_2)-b_y*r_2)*sin(%gamma_0)+(b_y*d_3*cos(%alpha_1)*sin(%alpha_2)-b_x*r_2)*cos(%gamma_0))*cos(%theta_1)+
(d_1+b_z)*d_3*sin(%alpha_1)*sin(%alpha_2)-r_1*r_2)/(r_3^2*cos(%alpha_2)^2*sin(%theta_3)^2-2*d_3*r_3*cos(%alpha_2)*sin(%alpha_2)*sin(%theta_3)+r_3^2*cos(%theta_3)^2+2*r_2*r_3*cos(%theta_3)+d_3^2*sin(%alpha_2)^2+r_2^2);

   Sin_Theta_2 : constant Reals.Real :=
((r_3*sin(%alpha_1)*cos(%theta_3)+r_2*sin(%alpha_1))*e_z+((-r_3*cos(%alpha_2)*cos(%gamma_0)*sin(%theta_1)-r_3*cos(%alpha_2)*sin(%gamma_0)*cos(%theta_1))*sin(%theta_3)+(r_3*cos(%alpha_1)*cos(%gamma_0)*cos(%theta_1)-r_3*cos(%alpha_1)*sin(%gamma_0)*sin(%theta_1))*cos(%theta_3)+
(d_3*sin(%alpha_2)*cos(%gamma_0)-r_2*cos(%alpha_1)*sin(%gamma_0))*sin(%theta_1)+(d_3*sin(%alpha_2)*sin(%gamma_0)+r_2*cos(%alpha_1)*cos(%gamma_0))*cos(%theta_1))*e_y+((r_3*cos(%alpha_2)*sin(%gamma_0)*sin(%theta_1)-r_3*cos(%alpha_2)*cos(%gamma_0)*cos(%theta_1))*sin(%theta_3)+
(-r_3*cos(%alpha_1)*cos(%gamma_0)*sin(%theta_1)-r_3*cos(%alpha_1)*sin(%gamma_0)*cos(%theta_1))*cos(%theta_3)+(-d_3*sin(%alpha_2)*sin(%gamma_0)-r_2*cos(%alpha_1)*cos(%gamma_0))*sin(%theta_1)+(d_3*sin(%alpha_2)*cos(%gamma_0)-r_2*cos(%alpha_1)*sin(%gamma_0))*cos(%theta_1))*e_x+
((b_y*r_3*cos(%alpha_2)*cos(%gamma_0)-b_x*r_3*cos(%alpha_2)*sin(%gamma_0))*sin(%theta_1)+(b_y*r_3*cos(%alpha_2)*sin(%gamma_0)+b_x*r_3*cos(%alpha_2)*cos(%gamma_0))*cos(%theta_1)+r_1*r_3*cos(%alpha_2))*sin(%theta_3)+
((b_y*r_3*cos(%alpha_1)*sin(%gamma_0)+b_x*r_3*cos(%alpha_1)*cos(%gamma_0))*sin(%theta_1)+(b_x*r_3*cos(%alpha_1)*sin(%gamma_0)-b_y*r_3*cos(%alpha_1)*cos(%gamma_0))*cos(%theta_1)+(-d_1-b_z)*r_3*sin(%alpha_1))*cos(%theta_3)+
((b_x*d_3*sin(%alpha_2)+b_y*r_2*cos(%alpha_1))*sin(%gamma_0)+(b_x*r_2*cos(%alpha_1)-b_y*d_3*sin(%alpha_2))*cos(%gamma_0))*sin(%theta_1)+((b_x*r_2*cos(%alpha_1)-b_y*d_3*sin(%alpha_2))*sin(%gamma_0)+(-b_x*d_3*sin(%alpha_2)-b_y*r_2*cos(%alpha_1))*cos(%gamma_0))*cos(%theta_1)-d_3*r_1*
sin(%alpha_2)+(-d_1-b_z)*r_2*sin(%alpha_1))/(r_3^2*cos(%alpha_2)^2*sin(%theta_3)^2-2*d_3*r_3*cos(%alpha_2)*sin(%alpha_2)*sin(%theta_3)+r_3^2*cos(%theta_3)^2+2*r_2*r_3*cos(%theta_3)+d_3^2*sin(%alpha_2)^2+r_2^2);

begin
  Theta_1 := Reals.Elementary_Functions.Arctan (Sin_Theta_1, Cos_Theta_1);
  Theta_2 := Reals.Elementary_Functions.Arctan (Sin_Theta_2, Cos_Theta_2);
end Kinematics.Inverse.Algebraic.Generic_Compute_12;
